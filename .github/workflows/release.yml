name: Release

on:
  push:
    branches: [main]

jobs:
  release-prepare:
    name: Prepare Release
    runs-on: ubuntu-22.04
    outputs:
      result: ${{ steps.prepare.outputs.result }}
      version: ${{ steps.prepare.outputs.version }}
      changeLog: ${{ steps.prepare.outputs.changeLog }}
    steps:
      - uses: argentumcode/release-action@v0.1.2
        id: prepare
        with:
          action: prepare
          token: ${{ secrets.GITHUB_TOKEN }}
          secret: ${{ secrets.RELEASE_SECRET }}

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs:
      - release-prepare
    if: ${{ needs.release-prepare.outputs.result == 'release' }}
    steps:
      - name: Release
        uses: argentumcode/release-action@v0.1.2
        with:
          action: release
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ needs.release-prepare.outputs.version }}
          changelog: ${{ needs.release-prepare.outputs.changeLog }}
          secret: ${{ secrets.RELEASE_SECRET }}

  release-pull-request:
    name: Create Release Pull Request
    runs-on: ubuntu-22.04
    needs:
      - release-prepare
    if: ${{ needs.release-prepare.outputs.result == 'prepare' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Prepare Release Notes
        id: release_notes
        run: |
          set -e
          git config --global user.name 'release-bot'
          git config --global user.email 'release-bot'
          if [[ "$(git tag -l "v1.0.0")" == "v1.0.0" ]]; then
            pnpm run release
          else
            pnpm run release --first-release
          fi
          TAG="$(git tag --points-at HEAD)"
          echo "::set-output name=version::${TAG:1}"
          git diff HEAD^1 HEAD CHANGELOG.md | egrep -v '^\+\+\+' | grep -e '^\+' | sed -e 's/^\+//g' > /tmp/release-notes.txt

      - name: Create Release Pull Request
        uses: argentumcode/release-action@v0.1.2
        with:
          action: create-pull-request
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.release_notes.outputs.version }}
          changelogFile: /tmp/release-notes.txt
          secret: ${{ secrets.RELEASE_SECRET }}
